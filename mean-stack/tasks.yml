- name: create a mean stack environment
  hosts: mean-stack
  vars:
    # NodeJS vars
    nodejs_version: "8"
    # MongoDB vars
    mongodb_version: "3.6"
    # Redis vars
    redis_src_dir: "/tmp/redis-stable"
    redis_cfg_file: "/etc/redis/redis.conf"
    redis_test_installation: False
  tasks:
    - name: setup nodejs packages
      script: files/nodejs/setup_{{ nodejs_version }}.sh

    - name: install nodejs
      apt: name=nodejs

    - name: import mongodb apt gpg key
      command: apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5

    - name: create a sources list file for mongodb
      copy:
        dest: "/etc/apt/sources.list.d/mongodb-org-{{ mongodb_version }}.list"
        content: "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/{{ mongodb_version }} multiverse"

    - name: install mongodb apt packages
      apt: name=mongodb-org update_cache=yes

    - name: make mongodb accessible from outside container
      replace:
        path: "/etc/mongod.conf"
        regexp: "^bindIp: 127.0.0.1$"
        replace: "bindIp: 0.0.0.0"

    - name: run mongodb service
      script: files/mongodb/mongod.sh start

    - name: install redis dependencies
      apt: name={{ item }}
      with_items:
        - build-essential
        - tcl

    - name: download redis sources
      uri:
        url: "http://download.redis.io/redis-stable.tar.gz"
        dest: "{{ redis_src_dir }}.tar.gz"
        status_code: 200, 304

    - name: extract redis sources
      unarchive: >
        src={{ redis_src_dir }}.tar.gz
        dest=/tmp/
        remote_src=yes
        owner=root
        mode=0700
    
    - name: clean old make executions
      make:
        chdir: "{{ redis_src_dir }}"
        target: distclean

    - name: compile redis sources
      make:
        chdir: "{{ redis_src_dir }}"
  
    - name: test redis sources
      make:
        chdir: "{{ redis_src_dir }}"
        target: test
      when: redis_test_installation == True

    - name: install redis binaries
      make:
        chdir: "{{ redis_src_dir }}"
        target: install

    - name: create redis user
      user: name=redis system=yes createhome=no

    - name: create redis working directory
      file: path=/var/lib/redis owner=redis state=directory

    - name: create redis config directory
      file: path=/etc/redis owner=root state=directory

    - name: copy redis configuration file
      copy: 
        dest: "{{ redis_cfg_file }}"
        src: "{{ redis_src_dir }}/redis.conf"
        remote_src: yes

    - name: set supervised to systemd in redis configuration
      replace:
        path: "{{ redis_cfg_file }}"
        regexp: "supervised no"
        replace: "supervised systemd"

    - name: set dump data directory in redis configuration
      replace:
        path: "{{ redis_cfg_file }}"
        regexp: "^dir ./$"
        replace: "dir /var/lib/redis"

    - name: make redis accessible from outside container
      replace:
        path: "{{ redis_cfg_file }}"
        regexp: "^bind 127.0.0.1$"
        replace: "bind 0.0.0.0"

    - name: start redis
      command: "redis-server {{ redis_cfg_file }}"
      async: 45
      poll: 0